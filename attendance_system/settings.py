"""
Django settings for attendance_system project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url
from decouple import config


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-2u&hj9ghg5rn!sb3v21t)g5mlzt1l)i%#z44fna#)2g)h@f5&o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False # despues de producción

ALLOWED_HOSTS = ['https://attendance-system-ibbh.onrender.com','localhost']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth', # Para autenticación
    'django.contrib.contenttypes',
    'django.contrib.sessions',  # Para manejo de sesiones
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'attendance', # para el sistema de autenticación
    'cities_light',  # Para la carga dinamica de lugar de origen
]

# ciudades dinamicas
CITIES_LIGHT_TRANSLATION_LANGUAGES = ['es', 'en']  # Idiomas que deseas soportar
CITIES_LIGHT_DATA_PATH = os.path.join(BASE_DIR, 'data/csv')  # Ruta correcta
CITIES_LIGHT_DATA_SOURCE = os.path.join(BASE_DIR, 'data/csv')


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'attendance_system.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'attendance_system.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(
        default=config('DATABASE_URL'),
        engine='django.db.backends.postgresql',
    )
   # 'default': {
   #     'ENGINE': 'django.db.backends.sqlite3',
   #     'NAME': BASE_DIR / 'db.sqlite3',
   # },
   # 'test': {
   #     'ENGINE': 'django.db.backends.sqlite3',  # Base de datos para pruebas
   #     'NAME': BASE_DIR / "test_db.sqlite3",  # Nombre de la base de datos de prueba
   # },
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
AUTH_USER_MODEL = 'attendance.CustomUser'  # Crear campos de formulario personalizados

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 8,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Redireccionamiento a marcar asistencia
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'mark-attendance'  # O la URL a la que quieres redirigir después del login


SESSION_COOKIE_AGE = 1209600  # La sesión dura dos semanas (en segundos)
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Utiliza el backend de base de datos

# recuperacion contraseña
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'recuperacionclaveeifa@gmail.com'  # Aquí pones tu correo de Gmail
EMAIL_HOST_PASSWORD = 'kinc aeyl ydoq rhzn'

# Protocolo y dominio para el email
DEFAULT_FROM_EMAIL = 'recuperacionclaveeifa@gmail.com'
# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Directorio con booststrap

STATICFILES_DIRS = [
    BASE_DIR / "static",
]